#include <stdio.h>

#define MAX_PRODUCTIONS 10
#define MAX_STRING_LENGTH 20

char productions[MAX_PRODUCTIONS][MAX_STRING_LENGTH];

void findFirst(char nonTerminal);

int main() {
    int n;
    printf("Enter the number of productions: ");
    scanf("%d", &n);
    printf("Enter the productions:\n");
    for (int i = 0; i < n; i++) {
        scanf("%s", productions[i]);
    }
    for (int i = 0; i < n; i++) {
        printf("First(%c) : [", productions[i][0]);
        findFirst(productions[i][0]);
        printf("].\n");
    }
    return 0;
}
void findFirst(char nonTerminal) {
    char result[MAX_STRING_LENGTH];
    int resultIndex = 0;
    for (int i = 0; i < MAX_PRODUCTIONS; i++) {
        if (productions[i][0] == nonTerminal) {
            for (int j = 2; productions[i][j] != '\0'; j++) {
                if (productions[i][j - 1] == '/') {
                    if (productions[i][j] >= 'A' && productions[i][j] <= 'Z') {
                        findFirst(productions[i][j]);
                    } else {
                        result[resultIndex++] = productions[i][j];
                    }
                }
            }
        }
    }
    char uniqueResult[MAX_STRING_LENGTH];
    int uniqueIndex = 0;
    for (int i = 0; i < resultIndex; i++) {
        int isDuplicate = 0;
        for (int j = 0; j < uniqueIndex; j++) {
            if (result[i] == uniqueResult[j]) {
                isDuplicate = 1;
                break;
            }
        }
        if (!isDuplicate) {
            uniqueResult[uniqueIndex++] = result[i];
        }
    }
    for (int i = 0; i < uniqueIndex; i++) {
        printf("%c,", uniqueResult[i]);
    }
    if (uniqueIndex > 0) {
        printf("\b"); 
    }
}
